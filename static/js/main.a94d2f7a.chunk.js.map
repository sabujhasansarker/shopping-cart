{"version":3,"sources":["context/ShoppingContext.js","components/layout/NavBar.js","context/ShoppingReducer.js","context/Type.js","context/ShoppingState.js","components/Product.js","components/Card.js","components/SingleProduct.js","App.js","serviceWorker.js","index.js"],"names":["ShoppingContext","createContext","NavBar","quantity","useContext","className","to","src","alt","state","action","type","payload","cards","filter","card","id","localStorage","setItem","JSON","stringify","price","reduce","result","prd","qn","ShoppingState","children","initialState","items","data","loading","useReducer","ShoppingReducer","dispatch","useEffect","cardItemsRefresh","parse","getItem","setPrice","Provider","value","cardItems","prvData","callBack","findOrg","find","i","ca","removeItem","checkOut","Product","map","item","key","image","name","onClick","Card","length","SingleProduct","match","Number","params","dec","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a94d2f7a.chunk.js","sourcesContent":["import { createContext } from \"react\";\nconst ShoppingContext = createContext();\nexport default ShoppingContext;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Context\nimport ShoppingContext from \"../../context/ShoppingContext\";\n\nconst NavBar = () => {\n  const { quantity } = useContext(ShoppingContext);\n  return (\n    <header>\n      <nav>\n        <div className=\"left\">\n          <Link to=\"/\">Logo</Link>\n        </div>\n        <div className=\"right\">\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/\">Products</Link>\n            </li>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/register\">Register</Link>\n            </li>\n            <li>\n              <Link to=\"/card\">\n                <img\n                  src=\"https://img.icons8.com/plasticine/100/000000/add-shopping-cart.png\"\n                  className=\"cart-img\"\n                  alt=\"\"\n                />\n                <span className=\"card-number\">{quantity}</span>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default NavBar;\n","// types\nimport { CARD_ITEMS, PRICE, SAVE, REMOVE, CHECKOUT } from \"./Type\";\n\nexport default (state, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CARD_ITEMS:\n      return {\n        ...state,\n        cards: payload,\n      };\n    case REMOVE:\n      return {\n        ...state,\n        cards: state.cards.filter((card) => payload.id !== card.id && card),\n      };\n    case SAVE:\n      localStorage.setItem(\"shoppingCard\", JSON.stringify(state.cards));\n\n    case PRICE:\n      return {\n        ...state,\n        price:\n          state.cards &&\n          state.cards.reduce((result, prd) => result + prd.price * prd.qn, 0),\n        quantity:\n          state.cards &&\n          state.cards.reduce((result, prd) => result + prd.qn, 0),\n      };\n    case CHECKOUT:\n      localStorage.setItem(\"shoppingCard\", JSON.stringify([]));\n      return {\n        ...state,\n        cards: [],\n        price: null,\n        quantity: 0,\n      };\n\n    default:\n      return state;\n  }\n};\n","export const CARD_ITEMS = \"CARD_ITEMS\";\nexport const PRICE = \"PRICE\";\nexport const SAVE = \"SAVE\";\nexport const REMOVE = \"REMOVE\";\nexport const CHECKOUT = \"CHECKOUT\";\n","import React, { useReducer, useEffect } from \"react\";\n\n// data\nimport data from \"../demo.json\";\n\n// types\nimport { CARD_ITEMS, PRICE, SAVE, REMOVE, CHECKOUT } from \"./Type\";\n\n// Context\nimport ShoppingContext from \"./ShoppingContext\";\n\n// reducer\nimport ShoppingReducer from \"./ShoppingReducer\";\n\nconst ShoppingState = ({ children }) => {\n  // initial state\n  const initialState = {\n    items: data,\n    loading: false,\n    cards: [],\n    price: 0,\n    quantity: 0,\n  };\n\n  // reducer\n  const [state, dispatch] = useReducer(ShoppingReducer, initialState);\n\n  // funtions //\n\n  useEffect(() => {\n    cardItemsRefresh();\n  }, []);\n\n  const cardItemsRefresh = () => {\n    dispatch({\n      type: CARD_ITEMS,\n      payload: JSON.parse(localStorage.getItem(\"shoppingCard\")),\n    });\n    setPrice();\n  };\n\n  const cardItems = (prvData, data, callBack) => {\n    let findOrg = prvData && prvData.find((i) => i.id === data.id);\n    if (findOrg) {\n      callBack === \"-\"\n        ? findOrg.qn > 1\n          ? (findOrg.qn -= 1)\n          : (findOrg.qn = 1)\n        : (findOrg.qn += 1);\n      prvData.filter((ca) => (ca.id === data.id ? findOrg : ca));\n    } else {\n      dispatch({\n        type: CARD_ITEMS,\n        payload: prvData ? [...prvData, data] : [data],\n      });\n    }\n    dispatch({\n      type: SAVE,\n    });\n  };\n\n  const setPrice = () => {\n    dispatch({\n      type: PRICE,\n    });\n  };\n\n  const removeItem = (data) => {\n    dispatch({\n      type: REMOVE,\n      payload: data,\n    });\n    dispatch({\n      type: SAVE,\n    });\n  };\n\n  const checkOut = () => {\n    dispatch({\n      type: CHECKOUT,\n    });\n  };\n\n  return (\n    <ShoppingContext.Provider\n      value={{\n        items: state.items,\n        cards: state.cards,\n        price: state.price,\n        quantity: state.quantity,\n        loading: state.loading,\n        cardItems,\n        setPrice,\n        cardItemsRefresh,\n        removeItem,\n        checkOut,\n      }}\n    >\n      {children}\n    </ShoppingContext.Provider>\n  );\n};\n\nexport default ShoppingState;\n","import React, { useContext } from \"react\";\n\nimport ShoppingContext from \"../context/ShoppingContext\";\nimport { Link } from \"react-router-dom\";\n\nconst Product = () => {\n  const { items, cardItems, cards, setPrice } = useContext(ShoppingContext);\n\n  // On click event\n  const onClick = (e) => {\n    cardItems(cards, e);\n    setPrice();\n  };\n\n  return (\n    <div className=\"product\">\n      {items.map((item) => (\n        <div className=\"card\" key={item.id}>\n          <img className=\"product-img\" src={item.image} alt=\"\" />\n          <div className=\"content\">\n            <Link to={`/product-${item.id}`} className=\"name\">\n              {item.name}\n            </Link>\n            <p>${item.price}</p>\n            <div className=\"button\" onClick={() => onClick(item)}>\n              <img\n                src=\"https://img.icons8.com/plasticine/100/000000/add-shopping-cart.png\"\n                alt=\"\"\n              />\n              Add to cart\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Product;\n","import React, { useContext, Fragment } from \"react\";\nimport ShoppingContext from \"../context/ShoppingContext\";\nimport { Link } from \"react-router-dom\";\n\nconst Card = () => {\n  const {\n    cards,\n    cardItems,\n    removeItem,\n    quantity,\n    price,\n    checkOut,\n  } = useContext(ShoppingContext);\n  return (\n    <div className=\"carts-container\">\n      {cards.length > 0 ? (\n        <Fragment>\n          <div className=\"carts\">\n            {cards.map((card) => (\n              <div className=\"cart\" key={card.id}>\n                <img src={card.image} alt=\"\" />\n                <div className=\"content\">\n                  <Link className=\"name\" to={`/product-${card.id}`}>\n                    {card.name}\n                  </Link>\n                  <p className=\"action-container\">\n                    <span\n                      className=\"action\"\n                      onClick={() => cardItems(cards, card, \"+\")}\n                    >\n                      +\n                    </span>\n                    <span className=\"quantity\">{card.qn}</span>\n                    <span\n                      className=\"action\"\n                      onClick={() => cardItems(cards, card, \"-\")}\n                    >\n                      -\n                    </span>\n                  </p>\n                  <div className=\"button\" onClick={() => removeItem(card)}>\n                    <img\n                      src=\"https://img.icons8.com/plasticine/100/000000/clear-shopping-cart.png\"\n                      alt=\"\"\n                    />\n                    Remove\n                  </div>\n                  <p className=\"total-quantity single-qn\">\n                    Quantity : <span>{card.qn}</span>\n                  </p>\n                  <p className=\"single-price single-qn\">\n                    Price : <span>${card.price}</span>\n                  </p>\n                  <hr />\n                  <p className=\"price single-qn\">\n                    Total Price : <span>${card.qn * card.price}</span>\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className=\"total\">\n            <h1>Total</h1>\n            <hr />\n            <div className=\"total-qn\">\n              Total Quantity : <b>{quantity}</b>\n            </div>\n            <div className=\"total-price\">\n              Total Price : <b>${price}</b>\n            </div>\n            <div className=\"button\" onClick={() => checkOut()}>\n              <img\n                src=\"https://img.icons8.com/plasticine/100/000000/shopping.png\"\n                alt=\"\"\n              />\n              Checkout\n            </div>\n          </div>\n        </Fragment>\n      ) : (\n        <h1 className=\"empty\">Your cart is currently empty.</h1>\n      )}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useContext, Fragment } from \"react\";\nimport ShoppingContext from \"../context/ShoppingContext\";\n\nconst SingleProduct = ({ match }) => {\n  const { items } = useContext(ShoppingContext);\n  return (\n    <div className=\"single-product\">\n      {items.map((item) => (\n        <Fragment key={item.id}>\n          {item.id === Number(match.params.id) && (\n            <div className=\"card\">\n              <img src={item.image} alt=\"\" />\n              <h1>{item.name}</h1>\n              <p>{item.dec}</p>\n            </div>\n          )}\n        </Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default SingleProduct;\n","import React from \"react\";\n\n// Router\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport NavBar from \"./components/layout/NavBar\";\n\n// State\nimport ShoppingState from \"./context/ShoppingState\";\nimport Product from \"./components/Product\";\nimport Card from \"./components/Card\";\nimport SingleProduct from \"./components/SingleProduct\";\n\nfunction App() {\n  return (\n    <ShoppingState>\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <div className=\"container\">\n            <Switch>\n              <Route path=\"/\" exact component={Product} />\n              <Route path=\"/card\" exact component={Card} />\n              <Route path=\"/product-:id\" exact component={SingleProduct} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </ShoppingState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}